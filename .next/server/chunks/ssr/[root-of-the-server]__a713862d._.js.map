{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file:///C:/DANI/PROGRAMACION/PROYECTOS/utility_hub/app/todo/components/Task.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/todo/components/Task.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/todo/components/Task.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAAgS,GAC7T,8DACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 29, "column": 0}, "map": {"version":3,"sources":["file:///C:/DANI/PROGRAMACION/PROYECTOS/utility_hub/app/todo/components/Task.tsx/__nextjs-internal-proxy.mjs"],"sourcesContent":["// This file is generated by next-core EcmascriptClientReferenceModule.\nimport { registerClientReference } from \"react-server-dom-turbopack/server\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/app/todo/components/Task.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/app/todo/components/Task.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":"AAAA,uEAAuE;;;;;AACvE;;uCACe,IAAA,wQAAuB,EAClC;IAAa,MAAM,IAAI,MAAM;AAA4Q,GACzS,0CACA","ignoreList":[0],"debugId":null}},
    {"offset": {"line": 43, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 51, "column": 0}, "map": {"version":3,"sources":["file:///C:/DANI/PROGRAMACION/PROYECTOS/utility_hub/app/todo/page.tsx"],"sourcesContent":["import Task, { TaskInterface } from \"./components/Task\" // use {} for named exports and don't use {} for default exports\r\n// Task → default export → no curly braces\r\n// TaskInterface → named export → must use curly braces {}\r\n\r\n// Fetch all tasks from the backend API\r\nasync function fetchTasks() {\r\n  const res = await fetch(`${process.env.NEXT_PUBLIC_BASE_URL}/api/todo`, {\r\n    // if \"method:[http method]\" is not declared, GET method is by default --> method: GET\r\n    cache: 'no-store', // ensures the data is always fresh and not cached\r\n  })\r\n  return res.json() as Promise<TaskInterface[]>\r\n}\r\n\r\nexport default async function TodoMain() {\r\n\r\n  // Get tasks from API\r\n  const tasks = await fetchTasks();\r\n\r\n  return (\r\n    <div>\r\n      <h1>TODO App</h1>\r\n      <ul style={{ display: \"flex\", flexDirection: 'column', gap: '8px', width: '20rem', textAlign: 'center' }}>\r\n        {tasks.map((task: TaskInterface) => (\r\n          <li key={task._id} style={{ listStyle: \"none\" }}>\r\n            {/* Render the Task component and pass the task data as props */}\r\n            <Task taskRecieved={task} />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":";;;;;AAAA,mOAAwD,gEAAgE;;;AACxH,0CAA0C;AAC1C,0DAA0D;AAE1D,uCAAuC;AACvC,eAAe;IACb,MAAM,MAAM,MAAM,MAAM,6DAAoC,SAAS,CAAC,EAAE;QACtE,sFAAsF;QACtF,OAAO;IACT;IACA,OAAO,IAAI,IAAI;AACjB;AAEe,eAAe;IAE5B,qBAAqB;IACrB,MAAM,QAAQ,MAAM;IAEpB,qBACE,8OAAC;;0BACC,8OAAC;0BAAG;;;;;;0BACJ,8OAAC;gBAAG,OAAO;oBAAE,SAAS;oBAAQ,eAAe;oBAAU,KAAK;oBAAO,OAAO;oBAAS,WAAW;gBAAS;0BACpG,MAAM,GAAG,CAAC,CAAC,qBACV,8OAAC;wBAAkB,OAAO;4BAAE,WAAW;wBAAO;kCAE5C,cAAA,8OAAC,6IAAI;4BAAC,cAAc;;;;;;uBAFb,KAAK,GAAG;;;;;;;;;;;;;;;;AAQ3B","debugId":null}}]
}