{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 61, "column": 0}, "map": {"version":3,"sources":["file:///C:/DANI/PROGRAMACION/PROYECTOS/utility_hub/lib/mongodb.ts"],"sourcesContent":["import mongoose from 'mongoose'\r\n\r\nconst MONGO_URI = process.env.MONGO_URI!\r\n\r\nif (!MONGO_URI) {\r\n  throw new Error('MONGO_URI is not defined in environment variables')\r\n}\r\n\r\nexport const connectToDB = async () => {\r\n  try {\r\n    // If there's already a connection, don't connect again\r\n    if (mongoose.connection.readyState >= 1) {\r\n      return\r\n    }\r\n\r\n    await mongoose.connect(MONGO_URI)\r\n    console.log('MongoDB connected successfully')\r\n  } catch (error) {\r\n    console.error('Error connecting to MongoDB:', error)\r\n  }\r\n}"],"names":[],"mappings":";;;;AAAA;;AAEA,MAAM,YAAY,QAAQ,GAAG,CAAC,SAAS;AAEvC,IAAI,CAAC,WAAW;IACd,MAAM,IAAI,MAAM;AAClB;AAEO,MAAM,cAAc;IACzB,IAAI;QACF,uDAAuD;QACvD,IAAI,oHAAQ,CAAC,UAAU,CAAC,UAAU,IAAI,GAAG;YACvC;QACF;QAEA,MAAM,oHAAQ,CAAC,OAAO,CAAC;QACvB,QAAQ,GAAG,CAAC;IACd,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,gCAAgC;IAChD;AACF","debugId":null}},
    {"offset": {"line": 87, "column": 0}, "map": {"version":3,"sources":["file:///C:/DANI/PROGRAMACION/PROYECTOS/utility_hub/models/Task.ts"],"sourcesContent":["import { Schema, model, models } from 'mongoose'\r\n\r\n// Define the structure (schema) of a Task document\r\nconst TaskSchema = new Schema({\r\n  text: { type: String, required: true },\r\n  isCompleted: { type: Boolean, default: false }\r\n}, { timestamps: true })\r\n\r\n// Create a model based on the schema\r\n// Mongoose automatically creates a collection named 'tasks' (plural form)\r\nconst Task = models.Task || model('Task', TaskSchema)\r\nexport default Task"],"names":[],"mappings":";;;;AAAA;;AAEA,mDAAmD;AACnD,MAAM,aAAa,IAAI,mHAAM,CAAC;IAC5B,MAAM;QAAE,MAAM;QAAQ,UAAU;IAAK;IACrC,aAAa;QAAE,MAAM;QAAS,SAAS;IAAM;AAC/C,GAAG;IAAE,YAAY;AAAK;AAEtB,qCAAqC;AACrC,0EAA0E;AAC1E,MAAM,OAAO,mHAAM,CAAC,IAAI,IAAI,IAAA,kHAAK,EAAC,QAAQ;uCAC3B","debugId":null}},
    {"offset": {"line": 114, "column": 0}, "map": {"version":3,"sources":["file:///C:/DANI/PROGRAMACION/PROYECTOS/utility_hub/app/api/tasks/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server'\r\nimport { connectToDB } from '@/lib/mongodb'\r\nimport Task from '@/models/Task'\r\n\r\n// Get all tasks\r\nexport async function GET() {\r\n  try {\r\n    await connectToDB()\r\n    const tasks = await Task.find({})\r\n    return NextResponse.json(tasks)\r\n  } catch (error) {\r\n    console.error(error)\r\n    return NextResponse.json({ message: 'Error fetching tasks' }, { status: 500 })\r\n  }\r\n}\r\n\r\n// Create task\r\nexport async function POST(req: Request) {\r\n  try {\r\n    const data = await req.json()\r\n    await connectToDB()\r\n    const task = await Task.create(data)\r\n    return NextResponse.json(task, { status: 201 })\r\n  } catch (error) {\r\n    console.error(error)\r\n    return NextResponse.json({ message: 'Error creating task' }, { status: 500 })\r\n  }\r\n}"],"names":[],"mappings":";;;;;;AAAA;AACA;AACA;;;;AAGO,eAAe;IACpB,IAAI;QACF,MAAM,IAAA,+HAAW;QACjB,MAAM,QAAQ,MAAM,2HAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,OAAO,gJAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAuB,GAAG;YAAE,QAAQ;QAAI;IAC9E;AACF;AAGO,eAAe,KAAK,GAAY;IACrC,IAAI;QACF,MAAM,OAAO,MAAM,IAAI,IAAI;QAC3B,MAAM,IAAA,+HAAW;QACjB,MAAM,OAAO,MAAM,2HAAI,CAAC,MAAM,CAAC;QAC/B,OAAO,gJAAY,CAAC,IAAI,CAAC,MAAM;YAAE,QAAQ;QAAI;IAC/C,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC;QACd,OAAO,gJAAY,CAAC,IAAI,CAAC;YAAE,SAAS;QAAsB,GAAG;YAAE,QAAQ;QAAI;IAC7E;AACF","debugId":null}}]
}